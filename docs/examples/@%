/***************************************************************************
 *                                  _   _ ____  _
 *  Project                     ___| | | |  _ \| |
 *                             / __| | | | |_) | |
 *                            | (__| |_| |  _ <| |___
 *                             \___|\___/|_| \_\_____|
 *
 * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution. The terms
 * are also available at http://curl.haxx.se/docs/copyright.html.
 *
 * You may opt to use, copy, modify, merge, publish, distribute and/or sell
 * copies of the Software, and permit persons to whom the Software is
 * furnished to do so, under the terms of the COPYING file.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ***************************************************************************/
/* <DESC>
 * simple HTTP POST using the easy interface
 * </DESC>
 */
#include <stdio.h>
#include <curl/curl.h>
#include <curl/cJSON.h>

static size_t my_fwrite(void *buffer, size_t size, size_t nmemb, void *stream)
{
 // printf("%s\r\n",buffer);
  cJSON *format = cJSON_Parse(buffer);
  return printf("%s",(char*)buffer);
}

int main(void)
{
  CURL *curl;
  CURLcode res;

  /* In windows, this will init the winsock stuff */
  curl_global_init(CURL_GLOBAL_ALL);

  /* get a curl handle */
  curl = curl_easy_init();
  if(curl) {
  	 struct curl_slist *chunk = NULL;
    /* First set the URL that is about to receive our POST. This URL can
       just as well be a https:// URL if that is what should receive the
       data. */
    curl_easy_setopt(curl, CURLOPT_URL, "http://42.159.247.218:5000/zc-warehouse/v1/activateDevice");
    /* Now specify the POST data */
    curl_easy_setopt(curl, CURLOPT_POSTFIELDS,  "{\"physicalDeviceId\":\"1111111111111111\", \"devVersion\":\"0-0-1\", \"mac\":\"E0:DB:55:E4:C7:49\", \"modVersion\":\"0-0-2\"}");

    /* Remove a header curl would otherwise add by itself */
    chunk = curl_slist_append(chunk, "Content-Type:application/x-zc-object");
    
   /* Remove a header curl would otherwise add by itself */
    chunk = curl_slist_append(chunk, "X-Zc-Device-Id:1111111111111111");
    
       /* Remove a header curl would otherwise add by itself */
    chunk = curl_slist_append(chunk, "x-zc-major-domain:hongyan");

       /* Remove a header curl would otherwise add by itself */
    chunk = curl_slist_append(chunk, "x-zc-sub-domain:test3");
       /* set our custom set of headers */
    res = curl_easy_setopt(curl, CURLOPT_HTTPHEADER, chunk);
   
    curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);     
    /* Perform the request, res will get the return code */
    
   curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, my_fwrite);


    res = curl_easy_perform(curl);
    /* Check for errors */
    if(res != CURLE_OK)
      fprintf(stderr, "curl_easy_perform() failed: %s\n",
              curl_easy_strerror(res));

    /* always cleanup */
    curl_easy_cleanup(curl);
  }
  curl_global_cleanup();
  return 0;
}
